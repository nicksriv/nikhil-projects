app.environment=development

spring.data.rest.basePath=/api
server.port=9090
server.allowOrigin=http://localhost:3000


##jwt configuration
#security.jwt.secret=gsakjdfkjash324global87rtfhkjasdfhav5wtrtts
security.jwt.secret=secretKey
security.jwt.authUrl=/**/authenticate/**
security.jwt.header=Authorization
security.jwt.prefix=Bearer
security.jwt.expiration=3600


## default connection pool
spring.servlet.multipart.enabled=true



## database
# ddl-auto: drop n create table again, good for testing, comment this in production
#spring.data.mongodb.uri=mongodb+srv://<username>:<pwd>@<cluster>.mongodb.net/mygrocerylist
#spring.data.mongodb.database=mygrocerylist
spring.data.mongodb.uri=mongodb://localhost:27017/brandpulse
spring.data.mongodb.database=brandpulse

app.url.base=
app.path.base=



#rest
sms.type=rest
sms.url=



#smtp/rest/aws
#https://mkyong.com/spring-boot/spring-boot-how-to-send-email-via-smtp/
mail.type=smtp
mail.url=
mail.apikey=
spring.mail.host=smtp.rediffmailpro.com
spring.mail.port=587
spring.mail.username=NA
spring.mail.password=NA
spring.mail.from=info@brandpulse.com
spring.mail.from.name=Brand Pulse
spring.mail.protocol=smtp
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true
mail.smtp.ssl.enable=true



amazon.aws.accesskey=
amazon.aws.secretkey=
amazon.aws.bucketName=brandpulse-cdn-storage
amazon.aws.bucket.url=https://cdn.brandpulse.v5global.com/


#zipkin props
spring.application.name=api-job-service
spring.main.allow-bean-definition-overriding=true
spring.zipkin.baseUrl = https://zipkin.uat.brandpulse.v5global.com/

spring.zipkin.sender.type= web
spring.cloud.compatibility-verifier.enabled=false